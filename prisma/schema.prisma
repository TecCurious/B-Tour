// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String   // Hashed password
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teams     TeamMember[]
  createdTeams Team[] @relation("TeamCreator")
}

model Team {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creatorId String
  creator   User     @relation("TeamCreator", fields: [creatorId], references: [id])
  members   TeamMember[]
  expenses  Expense[]
}

model TeamMember {
  id        String   @id @default(uuid())
  userId    String
  teamId    String
  joinedAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  team      Team     @relation(fields: [teamId], references: [id])
  paidAmount Float   @default(0)
  payableAmount Float @default(0)
  createdExpenses Expense[] @relation("ExpenseCreator")
  involvedExpenses ExpenseSplit[]

  @@unique([userId, teamId])
}

model Expense {
  id        String   @id @default(uuid())
  title     String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teamId    String
  creatorId String
  team      Team     @relation(fields: [teamId], references: [id])
  creator   TeamMember @relation("ExpenseCreator", fields: [creatorId], references: [id])
  splits    ExpenseSplit[]
}

model ExpenseSplit {
  id        String   @id @default(uuid())
  expenseId String
  memberId  String
  amount    Float
  expense   Expense  @relation(fields: [expenseId], references: [id])
  member    TeamMember @relation(fields: [memberId], references: [id])

  @@unique([expenseId, memberId])
}